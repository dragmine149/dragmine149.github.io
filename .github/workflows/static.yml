# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - "**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  branch:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

  build_matrix:
    runs-on: ubuntu-latest
    outputs:
      json_branches: ${{ steps.generate-matrix.outputs.json_branches }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate Matrix
        id: generate-matrix
        run: |
          branches=($(git branch -r | cut -c 3- | sed 's/origin\///g'))
          json_branches=$(printf '%s\n' "${branches[@]}" | jq -R . | jq -s -c .)
          echo "json_branches=${json_branches}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs:
      - build_matrix
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.build_matrix.outputs.json_branches) }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ matrix.branch != 'main' }}
        with:
          ref: ${{ matrix.branch }}
          path: Branches/${{ matrix.branch }}
      - uses: actions/checkout@v4
        if: ${{ matrix.branch == 'main' }}
        with:
          ref: ${{ matrix.branch }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ strategy.job-index }}
          path: .
#       - uses: actions/setup-node@v4
#         with:
#           node-version: 20
#       - name: Build
#         run: |
#           npm install
#           npm run build
#       - uses: actions/upload-artifact@v3
#         with:
#           name: ${{ strategy.job-index }}
#           path: dist/cv/browser/

  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs:
      - branch
      - build_matrix
      - build
    steps:
      # - name: Make Branches
      #   run: |
      #     mkdir -p Branches/${{ needs.branch.outputs.branch }}
      #     cd Branches/${{ needs.branch.outputs.branch }}

      # - name: Checkout
      #   uses: actions/checkout@v4
      #   with:
      #     path: Branches/${{ needs.branch.outputs.branch }}
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Get branches
        run: gh run download ${{ vars.GITHUB_RUN_ID }} --dir branches
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

# name: Continuous Deployment

# on:
#   push:
#     branches:
#       - "**"

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write
#   actions: read

# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# concurrency:
#   group: "pages"
#   cancel-in-progress: true

# jobs:
#   build_matrix:
#     runs-on: ubuntu-latest
#     outputs:
#       json_branches: ${{ steps.generate-matrix.outputs.json_branches }}
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       - name: Generate Matrix
#         id: generate-matrix
#         run: |
#           branches=($(git branch -r | cut -c 3- | sed 's/origin\///g'))
#           json_branches=$(printf '%s\n' "${branches[@]}" | jq -R . | jq -s -c .)
#           echo "json_branches=${json_branches}" >> $GITHUB_OUTPUT

#   build:
#     runs-on: ubuntu-latest
#     name: Build
#     needs:
#       - build_matrix
#     strategy:
#       matrix:
#         branch: ${{ fromJSON(needs.build_matrix.outputs.json_branches) }}
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           ref: ${{ matrix.branch }}
#       - uses: actions/setup-node@v4
#         with:
#           node-version: 20
#       - name: Build
#         run: |
#           npm install
#           npm run build
#       - uses: actions/upload-artifact@v3
#         with:
#           name: ${{ strategy.job-index }}
#           path: dist/cv/browser/

#   deploy:
#     runs-on: ubuntu-latest
#     name: Deploy
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     needs:
#       - build_matrix
#       - build
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       - name: Setup Pages
#         uses: actions/configure-pages@v3
#       - run: gh run download ${{ vars.GITHUB_RUN_ID }} --dir branches
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       - name: Create public folder
#         run: |
#           mkdir public
#           mv .github/workflows/index.html ./public/index.html
#           cd public
#           branches=$(echo '${{ needs.build_matrix.outputs.json_branches }}' | jq -r '.[]')
#           i=0
#           for branch in ${branches}
#           do
#             mkdir -p -- $branch
#             mv ../branches/$i/* ./$branch

#             echo "<li><a href=\"./CV/${branch}\">${branch}</a></li>" >> index.html

#             i=$((i+1))
#           done
#           cat ../.github/workflows/index_suffix.html >> index.html
#           ls -lR
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v2
#         with:
#           path: ./public/
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v2
