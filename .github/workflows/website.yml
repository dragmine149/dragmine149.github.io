# Simple workflow for deploying static content to GitHub Pages
name: Deploy website to github pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - "**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_blog_list:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Generate blog list
        run: ./tools/tools

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: blog_list.json
          path: Blog/list.json

  # Generate a matrix of all the branches
  build_matrix:
    runs-on: ubuntu-latest
    outputs:
      json_branches: ${{ steps.generate-matrix.outputs.json_branches }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate Matrix
        id: generate-matrix
        run: |
          branches=($(git branch -r | cut -c 3- | sed 's/origin\///g'))
          json_branches=$(printf '%s\n' "${branches[@]}" | jq -R . | jq -s -c .)
          echo "json_branches=${json_branches}" >> $GITHUB_OUTPUT

  # For each branch, make an artifact of said branch
  build:
    runs-on: ubuntu-latest
    needs:
      - build_matrix
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.build_matrix.outputs.json_branches) }}
    steps:
      # Probably a better way of doing this but..
      # If branch is not main, put under the Branches/<Branch Name> Folder
      - name: Not main checkout
        uses: actions/checkout@v4
        if: ${{ matrix.branch != 'main' }}
        with:
          ref: ${{ matrix.branch }}
          path: temp/Branches/${{ matrix.branch }}
      # Else put it in the main directory
      - name: Main Checkout
        uses: actions/checkout@v4
        if: ${{ matrix.branch == 'main' }}
        with:
          ref: ${{ matrix.branch }}

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

      - uses: nrwl/nx-set-shas@v3
        id: last_successful_commit_push
        with:
          main-branch-name: ${{ steps.branch-name.outputs.current_branch }} # Get the last successful commit for the current branch.

      - name: Run changed-files with the commit of the last successful test workflow run
        id: changed-files-base-sha-push
        uses: tj-actions/changed-files@v45
        with:
          base_sha: ${{ steps.last_successful_commit_push.outputs.base }}
          path: temp/Branches/${{ matrix.branch }}

      - name: Compress
        if: ${{ matrix.branch != 'main' }}
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
        run: |
          mkdir -p Branches/${{ matrix.branch }}
          for file in ${ALL_CHANGED_FILES}; do
            basedir=$(dirname $file)
            mkdir -p Branches/${{ matrix.branch }}/$basedir
            mv $file Branches/${{ matrix.branch }}/$basedir;
          done

      - name: Change Paths
        if: ${{ matrix.branch != 'main' }}
        run: ./temp/Branches/${{ matrix.branch }}/build_branch.sh

      - name: Upload branches
        uses: actions/upload-artifact@v4
        if: ${{ matrix.branch != 'main' }}
        with:
          name: build-${{ matrix.branch }}
          path: Branches/

      - name: Upload main
        uses: actions/upload-artifact@v4
        if: ${{ matrix.branch == 'main' }}
        with:
          name: build-${{ matrix.branch }}
          path: .


  # actually deploy to pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs:
      - build_matrix
      - build
      - build_blog_list
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Merge all the artifacts into one
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: build-all
          pattern: build-*

      # Download the artifact, just so we don't have to worry about making it into the format they want
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-all
          path: website/

      - name: Download blog list
        uses: actions/download-artifact@v4
        with:
          name: blog_list.json

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: website/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
